---
name: release-on-tag-creation
run-name: Creating a release on ${{ github.ref_name }} ${{ github.ref_type }}
on:
  push:
    tags:
      - "**"

env:
  BINARY_NAME: pihole_restore

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: fmt and lint
        run: |
          cargo fmt -- --check && cargo clippy -- -Dwarnings

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run tests
        run: |
          cargo test # no tests at the moment

  build-armv8:
    needs:
      - test
    runs-on: debian-latest
    steps:
      - uses: actions/checkout@v3

      - name: Extract tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build x86_64 glib2.28
        env:
          TAG_NAME: ${{ steps.vars.outputs.tag }}
        run: |
          make build-lowest-glibc-arm
          # uid = 1001, gid = 115 in github runners
          sudo chown 1001:115 target
          mkdir -p outputs
          cp ./target/aarch64-unknown-linux-gnu/release/${{ env.BINARY_NAME }} ./outputs/${{ env.BINARY_NAME }}-${TAG_NAME}-linux-armv8

      - name: Upload build artefact
        uses: actions/upload-artifact@v3
        with:
          path: outputs/${{ env.BINARY_NAME }}-${{ steps.vars.outputs.tag }}-linux-armv8
          name: ${{ env.BINARY_NAME }}-${{ steps.vars.outputs.tag }}-linux-armv8

  release:
    runs-on: ubuntu-latest
    needs:
      - build-armv8
    permissions:
      contents: write
      actions: read

    steps:
      - uses: actions/checkout@v3

      - name: Extract tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Download armv8 build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.BINARY_NAME }}-${{ steps.vars.outputs.tag }}-linux-armv8

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          fail_on_unmatched_files: true
          name: Release ${{ steps.vars.outputs.tag }}
          body: |
            \<auto generated, will be replaced pretty soon with good stuff\>

            ## Usage
            Refer to the [README.md ](README.md) for the usage details.
          files: |
            ${{ env.BINARY_NAME }}-${{ steps.vars.outputs.tag }}-linux-armv8
